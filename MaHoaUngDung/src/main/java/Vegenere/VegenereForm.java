/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vegenere;

/**
 *
 * @author buile
 */
public class VegenereForm extends javax.swing.JFrame {

    /**
     * Creates new form Vegenere
     */
    public VegenereForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tereaDecryption = new javax.swing.JTextArea();
        txtKeyEncryption = new javax.swing.JTextField();
        btnEncryption = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tareaEcryption = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtKeyGenerationEncryption = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtKeyDecryption = new javax.swing.JTextField();
        btnEncryption1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtKeyGenerationDecryption = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tereaDecryption.setColumns(20);
        tereaDecryption.setRows(5);
        jScrollPane2.setViewportView(tereaDecryption);

        txtKeyEncryption.setName("txtKeyEncryption"); // NOI18N

        btnEncryption.setText("Encryption");
        btnEncryption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryptionActionPerformed(evt);
            }
        });

        tareaEcryption.setColumns(20);
        tareaEcryption.setRows(5);
        jScrollPane1.setViewportView(tareaEcryption);

        jLabel3.setText("Key");

        txtKeyGenerationEncryption.setName("txtKeyEncryption"); // NOI18N

        jLabel4.setText("Key generation");

        jLabel5.setText("Key generation");

        txtKeyDecryption.setName("txtKeyEncryption"); // NOI18N

        btnEncryption1.setText("Encryption");
        btnEncryption1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryption1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Key");

        txtKeyGenerationDecryption.setName("txtKeyEncryption"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtKeyEncryption)
                            .addComponent(txtKeyGenerationEncryption)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtKeyDecryption, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEncryption1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEncryption, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(txtKeyGenerationDecryption, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(306, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtKeyEncryption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtKeyGenerationEncryption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnEncryption)))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtKeyDecryption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtKeyGenerationDecryption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnEncryption1)
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(171, 171, 171)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(33, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEncryptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryptionActionPerformed
        String keyEncryption = txtKeyEncryption.getText().replaceAll("\\s",""); 
        String plainText = tareaEcryption.getText().replaceAll("\\s","");
        String keyGeneration = Generation(plainText, keyEncryption);
        txtKeyGenerationEncryption.setText(keyGeneration);
        tereaDecryption.setText(encryption(plainText, keyGeneration));
    }//GEN-LAST:event_btnEncryptionActionPerformed
    
    private String Generation (String plainText,String keyEncryption){ // HÀM BIỂN ĐỔI TỪ KEY THÀNH KEY GENERATION
        int numberGeneration = plainText.length()/keyEncryption.length();
        int numberCheck = plainText.length()%keyEncryption.length();
        String keyGeneration ="";
        if(numberCheck != 0)
        {
            numberGeneration += 1;
            for (int i = 0; i < numberGeneration; i++) {
                keyGeneration = keyGeneration + keyEncryption;
            }
        }
        else 
        {
            for (int i = 0; i < numberGeneration; i++) {
                keyGeneration =  keyGeneration + keyEncryption;
            }
        }
       return keyGeneration;
    }
    private String encryption (String plainText,String keyGeneration) // HÀM MÃ HÓA PLAINTEXT
    {
        String encryption = "";
            for (int i = 0; i < plainText.length() ; i++) {
              String charPlainText = Character.toString(plainText.charAt(i));
              String charKeyGeneration = Character.toString(keyGeneration.charAt(i));
              int indexPlainText=0;
              int indexKeyGeneration=0;
                 for (int j = 0; j < alphabet.length;j++) {
                     if(charPlainText.equalsIgnoreCase(alphabet[j]))    
                        indexPlainText=j;       
                     if (charKeyGeneration.equalsIgnoreCase(alphabet[j]))
                        indexKeyGeneration=j;
                }
              int indexCipherText = (indexPlainText + indexKeyGeneration) - 26 >= 0 ? (indexPlainText + indexKeyGeneration)- 26:(indexPlainText + indexKeyGeneration);
              encryption += alphabet[indexCipherText];
            }
        return encryption;
    }
    private String decryption (String cipherText,String keyGeneration) // HÀM MÃ HÓA PLAINTEXT
    {
        String decryption = "";
            for (int i = 0; i < cipherText.length() ; i++) {
              String charPlainText = Character.toString(cipherText.charAt(i));
              String charKeyGeneration = Character.toString(keyGeneration.charAt(i));
              int indexCipherText=0;
              int indexKeyGeneration=0;
                 for (int j = 0; j < alphabet.length;j++) {
                     if(charPlainText.equalsIgnoreCase(alphabet[j]))    
                        indexCipherText=j;       
                     if (charKeyGeneration.equalsIgnoreCase(alphabet[j]))
                        indexKeyGeneration=j;
                }
              int indexPlainText = (indexCipherText - indexKeyGeneration) < 0 ? (indexCipherText - indexKeyGeneration)+ 26:(indexCipherText - indexKeyGeneration);
              decryption += alphabet[indexPlainText];
            }
        return decryption;
    }
   
    private void btnEncryption1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryption1ActionPerformed
         String keyDecryption = txtKeyDecryption.getText().replaceAll("\\s",""); 
        String CipherText = tereaDecryption.getText().replaceAll("\\s","");
        String keyGeneration = Generation(CipherText, keyDecryption);
        txtKeyGenerationDecryption.setText(keyGeneration);
        tareaEcryption.setText(decryption(CipherText, keyGeneration));
    }//GEN-LAST:event_btnEncryption1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VegenereForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VegenereForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VegenereForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VegenereForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VegenereForm().setVisible(true);
            }
        });
    }
     private String[] alphabet = {"a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"};
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEncryption;
    private javax.swing.JButton btnEncryption1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea tareaEcryption;
    private javax.swing.JTextArea tereaDecryption;
    private javax.swing.JTextField txtKeyDecryption;
    private javax.swing.JTextField txtKeyEncryption;
    private javax.swing.JTextField txtKeyGenerationDecryption;
    private javax.swing.JTextField txtKeyGenerationEncryption;
    // End of variables declaration//GEN-END:variables
}
